-- 테이블 순서는 관계를 고려하여 한 번에 실행해도 에러가 발생하지 않게 정렬되었습니다.


CREATE DATABASE CLOSET;
USE CLOSET;

-- USER Table Create SQL

CREATE TABLE `USER` (
  `userID` varchar(45) NOT NULL COMMENT '유저아이디',
  `nickname` varchar(50) DEFAULT NULL,
  `email` varchar(70) DEFAULT NULL,
  `pwd` varchar(45) DEFAULT NULL,
  `gender` varchar(10) DEFAULT NULL,
  `birth` date DEFAULT NULL,
  `emailChecked` varchar(45) DEFAULT NULL COMMENT '유저메일체크',
  `pfImageName` varchar(50) DEFAULT NULL COMMENT '프로필 이미지 이름',
  `pfImagePath` varchar(80) DEFAULT NULL COMMENT '프로필 이미지 경로',
  `pfContents` varchar(300) DEFAULT NULL COMMENT '프로필 소개글',
  PRIMARY KEY (`userID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='유저'



ALTER TABLE USER COMMENT '유저';

-> 옷 개수, 코디 개수, 총 좋아요 개수 등 추가



-- USER Table Create SQL
CREATE TABLE CLOTHES
(
    `cloNo`           INT             NOT NULL    COMMENT '옷번호(대리키)' AUTO_INCREMENT, 
    `cloName`         VARCHAR(45)     NULL        COMMENT '옷이름', 
    `cloCategory`     VARCHAR(45)     NULL        COMMENT '옷카테고리', 
    `cloBrand`        VARCHAR(45)     NULL        COMMENT '옷브랜드', 
    `cloColor`        VARCHAR(45)     NULL        COMMENT '옷색상', 
    `cloDate`         VARCHAR(45)     NULL        COMMENT '옷추가날짜', 
    `cloSeason`       VARCHAR(45)     NULL        COMMENT '옷계절', 
    `cloSize`         VARCHAR(45)     NULL        COMMENT '옷사이즈', 
    `cloImg`          VARCHAR(45)     NULL        COMMENT '옷이미지', 
    `fileName`        VARCHAR(45)     NULL        COMMENT '파일이름',
    `filePath`        VARCHAR(100)    NULL        COMMENT '파일경로', 
    `cloLike`         VARCHAR(45)     NULL        COMMENT '즐겨찾기', 
    `userID`          VARCHAR(45)     NOT NULL    COMMENT '유저아이디', 
    `closetName`      VARCHAR(45)     NOT NULL    COMMENT '옷장이름', 
    PRIMARY KEY (cloNo)
);

ALTER TABLE CLOTHES COMMENT '옷';

ALTER TABLE CLOTHES
    ADD CONSTRAINT FK_CLOTHES_closetName_CLOSET_closetName FOREIGN KEY (userID, closetName)
        REFERENCES CLOSET (userID, closetName) ON DELETE RESTRICT ON UPDATE RESTRICT;


-- USER Table Create SQL
CREATE TABLE CODI
(
    `codiNo`           INT             NOT NULL    COMMENT '코디번호(대리키)' AUTO_INCREMENT, 
    `codiName`         VARCHAR(45)     NULL        COMMENT '이름', 
    `season`     VARCHAR(45)     NULL        COMMENT '계절', 
    `place`        VARCHAR(45)     NULL        COMMENT '장소', 
    `buyDate`        DATE     NULL        COMMENT '구입 날짜', 
    `comment`         VARCHAR(1000)     NULL        COMMENT '코멘트 500자', 
    `favorite`       VARCHAR(10)     NULL		DEFAULT 'no'        COMMENT '즐겨찾기 여부', 
    `fileName`         VARCHAR(50)     NULL        COMMENT '파일이름', 
    `filePath`          VARCHAR(80)     NULL        COMMENT '파일경로', 
    `addedDate`        TIMESTAMP     NOT NULL	DEFAULT CURRENT_TIMESTAMP        COMMENT '추가 날짜', 
    `userID`          VARCHAR(30)     NOT NULL    COMMENT '유저아이디', 
    PRIMARY KEY (codiNo)
);

ALTER TABLE CODI COMMENT '코디';

ALTER TABLE CODI
    ADD CONSTRAINT FK_CODI_name_CLOSET_name FOREIGN KEY (userID)
        REFERENCES CLOSET (userID) ON DELETE RESTRICT ON UPDATE RESTRICT;





-- USER Table Create SQL
CREATE TABLE BOARD
(
    `boardNo`           INT             NOT NULL    COMMENT '게시글 고유번호'	AUTO_INCREMENT, 
    `boardType` varchar(20) NOT NULL COMMENT '게시판 타입',
    `userID`          VARCHAR(45)    NOT NULL    COMMENT '작성자 아이디-유저 외래키', 
    `fileName` varchar(45) NULL COMMENT '파일이름',
    `filePath` varchar(100)  NULL COMMENT '파일경로',
    `subject`      VARCHAR(45)    NOT NULL    COMMENT '게시글 제목',
    `contents`      TEXT    NULL    COMMENT '게시글 내용',
    `regDate`      TIMESTAMP     NOT NULL	DEFAULT CURRENT_TIMESTAMP        COMMENT '등록일', 
    `numHeart`      INT     NULL	DEFAULT 0        COMMENT '하트 개수', 
    PRIMARY KEY (boardNo)
);

ALTER TABLE BOARD COMMENT '옷 공유 게시판';

ALTER TABLE BOARD
    ADD CONSTRAINT BOARD_CLO_USER FOREIGN KEY (userID)
        REFERENCES USER (userID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE BOARD
    ADD CONSTRAINT BOARD_CLO_CLOTHES FOREIGN KEY (cloNo)
        REFERENCES CLOTHES (cloNo) ON DELETE RESTRICT ON UPDATE RESTRICT;

desc BOARD;
insert into BOARD values (null, 'a', 68, '제목' ,'안녕하세요? 게시글 내용입니다.', null, null);
select * from BOARD;








-- USER Table Create SQL
CREATE TABLE COMMENT_BOARD_CLO
(
    `cloCommentNo`           INT             NOT NULL    COMMENT '댓글 고유번호'	AUTO_INCREMENT, 
    `boardNo`           INT             NOT NULL    COMMENT '게시글 고유번호-옷 게시판 외래키', 
    `userID`          VARCHAR(45)    NOT NULL    COMMENT '작성자 아이디-유저 외래키',
    `contents`      TEXT    NULL    COMMENT '댓글 내용',
    `regDate`      TIMESTAMP     NOT NULL	DEFAULT CURRENT_TIMESTAMP        COMMENT '등록일', 
    `numGood`      INT     NULL	DEFAULT 0        COMMENT '좋아요 개수', 
    PRIMARY KEY (commentNo)
);

ALTER TABLE COMMENT_BOARD_CLO COMMENT '옷 게시판 댓글';

ALTER TABLE COMMENT_BOARD_CLO
    ADD CONSTRAINT COMMENT_BOARD_CLO_BOARD FOREIGN KEY (boardNo)
        REFERENCES BOARD_CLO (boardNo) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE COMMENT_BOARD_CLO
    ADD CONSTRAINT COMMENT_BOARD_CLO_USER FOREIGN KEY (userID)
        REFERENCES USER (userID) ON DELETE RESTRICT ON UPDATE RESTRICT;


desc COMMENT_BOARD_CLO;
insert into COMMENT_BOARD_CLO values (null, 3, 'a', '안녕하세요? 댓글 내용입니다.', null, null);
insert into COMMENT_BOARD_CLO values (null, 5, 'a', '안녕하세요? 댓글 내용입니다.', null, null);
select * from COMMENT_BOARD_CLO;




-- USER Table Create SQL
CREATE TABLE COMMENT_BOARD_CODI
(
    `codiCommentNo`           INT             NOT NULL    COMMENT '댓글 고유번호'	AUTO_INCREMENT, 
    `boardNo`           INT             NOT NULL    COMMENT '게시글 고유번호-코디 게시판 외래키', 
    `userID`          VARCHAR(45)    NOT NULL    COMMENT '작성자 아이디-유저 외래키',
    `contents`      TEXT    NULL    COMMENT '댓글 내용',
    `regDate`      TIMESTAMP     NOT NULL	DEFAULT CURRENT_TIMESTAMP        COMMENT '등록일', 
    `numGood`      INT     NULL	DEFAULT 0        COMMENT '좋아요 개수', 
    PRIMARY KEY (commentNo)
);

ALTER TABLE COMMENT_BOARD_CODI COMMENT '코디 게시판 댓글';

ALTER TABLE COMMENT_BOARD_CODI
    ADD CONSTRAINT COMMENT_BOARD_CODI_BOARD FOREIGN KEY (boardNo)
        REFERENCES BOARD_CODI (boardNo) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE COMMENT_BOARD_CODI
    ADD CONSTRAINT COMMENT_BOARD_CODI_USER FOREIGN KEY (userID)
        REFERENCES USER (userID) ON DELETE RESTRICT ON UPDATE RESTRICT;


desc COMMENT_BOARD_CODI;
insert into COMMENT_BOARD_CODI values (null, 3, 'a', '안녕하세요? 댓글 내용입니다.', null, null);
insert into COMMENT_BOARD_CODI values (null, 5, 'a', '안녕하세요? 댓글 내용입니다.', null, null);
select * from COMMENT_BOARD_CODI;






-- USER Table Create SQL
CREATE TABLE HEARTED_CLO_USER
(
    `cloHeartedNo`           INT             NOT NULL    COMMENT '옷 하트-유저 여부 고유번호'	AUTO_INCREMENT, 
    `cloBoardNo`           INT             NOT NULL    COMMENT '게시글 고유번호-옷 게시판 외래키', 
    `userID`          VARCHAR(45)    NOT NULL    COMMENT '작성자 아이디-유저 외래키',
    PRIMARY KEY (cloHeartedNo)
);

ALTER TABLE HEARTED_CLO_USER COMMENT '옷 게시판 하트된 유저(추가 삭제)';

ALTER TABLE HEARTED_CLO_USER
    ADD CONSTRAINT HEARTED_CLO_USER_BOARD FOREIGN KEY (cloBoardNo)
        REFERENCES BOARD_CLO (cloBoardNo) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE HEARTED_CLO_USER
    ADD CONSTRAINT HEARTED_CLO_USER_USER FOREIGN KEY (userID)
        REFERENCES USER (userID) ON DELETE RESTRICT ON UPDATE RESTRICT;

desc HEARTED_CLO_USER;
insert into HEARTED_CLO_USER values (null, 5, 'a');
delete from HEARTED_CLO_USER where cloHeartedNo=2;
select * from HEARTED_CLO_USER;









-- USER Table Create SQL
CREATE TABLE HEARTED_CODI_USER
(
    `codiHeartedNo`           INT             NOT NULL    COMMENT '코디 하트-유저 여부 고유번호'	AUTO_INCREMENT, 
    `codiBoardNo`           INT             NOT NULL    COMMENT '게시글 고유번호-코디 게시판 외래키', 
    `userID`          VARCHAR(45)    NOT NULL    COMMENT '작성자 아이디-유저 외래키',
    PRIMARY KEY (codiHeartedNo)
);

ALTER TABLE HEARTED_CODI_USER COMMENT '코디 게시판 하트된 유저(추가 삭제)';

ALTER TABLE HEARTED_CODI_USER
    ADD CONSTRAINT HEARTED_CODI_USER_BOARD FOREIGN KEY (codiBoardNo)
        REFERENCES BOARD_CODI (codiBoardNo) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE HEARTED_CODI_USER
    ADD CONSTRAINT HEARTED_CODI_USER_USER FOREIGN KEY (userID)
        REFERENCES USER (userID) ON DELETE RESTRICT ON UPDATE RESTRICT;

desc HEARTED_CODI_USER;
insert into HEARTED_CODI_USER values (null, 5, 'a');
delete from HEARTED_CODI_USER where cloHeartedNo=2;
select * from HEARTED_CODI_USER;









-- USER Table Create SQL
CREATE TABLE GOOD_CLOCOMMENT_USER
(
    `cloCommentGoodNo`           INT             NOT NULL    COMMENT ' 좋아요 옷코멘트-유저 여부 고유번호'	AUTO_INCREMENT, 
    `cloCommentNo`           INT             NOT NULL    COMMENT '옷 댓글 고유번호-옷 댓글 외래키', 
    `userID`          VARCHAR(45)    NOT NULL    COMMENT '유저아이디-유저 외래키',
    PRIMARY KEY (cloCommentGoodNo)
);

ALTER TABLE GOOD_CLOCOMMENT_USER COMMENT '옷코멘트 좋아요한 유저(추가 삭제)';

ALTER TABLE GOOD_CLOCOMMENT_USER
    ADD CONSTRAINT GOOD_CLOCOMMENT_USER_COMMENT FOREIGN KEY (cloCommentNo)
        REFERENCES COMMENT_BOARD_CLO (cloCommentNo) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE GOOD_CLOCOMMENT_USER
    ADD CONSTRAINT GOOD_CLOCOMMENT_USER_USER FOREIGN KEY (userID)
        REFERENCES USER (userID) ON DELETE RESTRICT ON UPDATE RESTRICT;

desc GOOD_CLOCOMMENT_USER;
insert into GOOD_CLOCOMMENT_USER values (null, 5, 'a');
delete from GOOD_CLOCOMMENT_USER where cloHeartedNo=2;
select * from GOOD_CLOCOMMENT_USER;








-- USER Table Create SQL
CREATE TABLE GOOD_CODICOMMENT_USER
(
    `codiCommentGoodNo`           INT             NOT NULL    COMMENT ' 좋아요 코디코멘트-유저 여부 고유번호'	AUTO_INCREMENT, 
    `codiCommentNo`           INT             NOT NULL    COMMENT '코디 댓글 고유번호-코디 댓글 외래키', 
    `userID`          VARCHAR(45)    NOT NULL    COMMENT '유저아이디-유저 외래키',
    PRIMARY KEY (codiCommentGoodNo)
);

ALTER TABLE GOOD_CODICOMMENT_USER COMMENT '코디코멘트 좋아요한 유저(추가 삭제)';

ALTER TABLE GOOD_CODICOMMENT_USER
    ADD CONSTRAINT GOOD_CODICOMMENT_USER_COMMENT FOREIGN KEY (codiCommentNo)
        REFERENCES COMMENT_BOARD_CODI (codiCommentNo) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE GOOD_CODICOMMENT_USER
    ADD CONSTRAINT GOOD_CODICOMMENT_USER_USER FOREIGN KEY (userID)
        REFERENCES USER (userID) ON DELETE RESTRICT ON UPDATE RESTRICT;

desc GOOD_CODICOMMENT_USER;
insert into GOOD_CODICOMMENT_USER values (null, 5, 'b');
delete from GOOD_CODICOMMENT_USER where cloHeartedNo=2;
select * from GOOD_CODICOMMENT_USER;






-- USER Table Create SQL
CREATE TABLE RELATION_CLO_CODI
(
    `relationCloCodiNo`           INT             NOT NULL    COMMENT ' 옷-코디 관계 고유번호'	AUTO_INCREMENT, 
    `cloNo`          INT    NOT NULL    COMMENT '옷 고유번호-옷 외래키',    
    `codiNo`           INT             NOT NULL    COMMENT '코디 고유번호-코디 외래키', 
    PRIMARY KEY (relationCloCodiNo)
);

ALTER TABLE RELATION_CLO_CODI COMMENT '옷-코디 관계';

ALTER TABLE RELATION_CLO_CODI
    ADD CONSTRAINT RELATION_CLO_CODI_CLO FOREIGN KEY (cloNo)
        REFERENCES CLOTHES (cloNo) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE RELATION_CLO_CODI
    ADD CONSTRAINT RELATION_CLO_CODI_CODI FOREIGN KEY (codiNo)
        REFERENCES CODI (codiNo) ON DELETE RESTRICT ON UPDATE RESTRICT;

desc RELATION_CLO_CODI;
insert into RELATION_CLO_CODI values (null, 76, 33);
select * from RELATION_CLO_CODI;







-- USER Table Create SQL
CREATE TABLE CLOSET
(
    `userID`          VARCHAR(45)    NOT NULL    COMMENT '유저아이디', 
    `closetName`      VARCHAR(45)    NOT NULL    COMMENT '옷장이름', 
    `closetLocation`  VARCHAR(45)    NULL        COMMENT '옷장위치', 
    `closetMemo`      VARCHAR(45)    NULL        COMMENT '옷장메모', 
    `closetOpen`      VARCHAR(45)    NULL        COMMENT '공개여부', 
    PRIMARY KEY (userID, closetName)
);

ALTER TABLE CLOSET COMMENT '옷장';

ALTER TABLE CLOSET
    ADD CONSTRAINT FK_CLOSET_userID_USER_userID FOREIGN KEY (userID)
        REFERENCES USER (userID) ON DELETE RESTRICT ON UPDATE RESTRICT;






-- USER Table Create SQL
CREATE TABLE RELATION
(
    `relationUserID`  VARCHAR(45)    NOT NULL    COMMENT '주사람ID', 
    `relatedUserID`   VARCHAR(45)    NOT NULL    COMMENT '부사람ID', 
    `type`            VARCHAR(45)    NULL        COMMENT '관계', 
    PRIMARY KEY (relationUserID, relatedUserID)
);

ALTER TABLE RELATION COMMENT '유저관계';

ALTER TABLE RELATION
    ADD CONSTRAINT FK_RELATION_relationUserID_USER_userID FOREIGN KEY (relationUserID)
        REFERENCES USER (userID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE RELATION
    ADD CONSTRAINT FK_RELATION_relatedUserID_USER_userID FOREIGN KEY (relatedUserID)
        REFERENCES USER (userID) ON DELETE RESTRICT ON UPDATE RESTRICT;

